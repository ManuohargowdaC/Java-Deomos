<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.junit.platform.suite.api.IncludePackages"/>
    <fullyQualifiedTypeName name="org.junit.platform.suite.api.ExcludePackages"/>
    <fullyQualifiedTypeName name="org.junit.platform.suite.api.SelectClasses"/>
    <fullyQualifiedTypeName name="org.junit.platform.suite.api.IncludeTags"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Tag"/>
    <fullyQualifiedTypeName name="org.junit.platform.suite.api.ExcludeTags"/>
    <fullyQualifiedTypeName name="com.bookapp.service.IBookService"/>
    <fullyQualifiedTypeName name="java.util.Arrays"/>
    <fullyQualifiedTypeName name="org.mockito.InjectMocks"/>
    <fullyQualifiedTypeName name="com.bookapp.service.OrederDetails"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="org.mockito.Mockito"/>
    <fullyQualifiedTypeName name="org.junit.platform.runner.JUnitPlatform"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.extension.ExtendWith"/>
    <fullyQualifiedTypeName name="org.mockito.exceptions.base.MockitoException"/>
    <fullyQualifiedTypeName name="org.mockito.junit.jupiter.MockitoExtension"/>
    <fullyQualifiedTypeName name="com.bookapp.model.Book"/>
    <fullyQualifiedTypeName name="com.bookapp.service.BookNotFoundException"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Disabled"/>
    <fullyQualifiedTypeName name="java.io.PrintWriter"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="com.empapp.model.Employee"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpSession"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="javax.servlet.ServletException"/>
    <fullyQualifiedTypeName name="java.io.IOException"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.doctorapp.repo.IDoctorRepository"/>
    <fullyQualifiedTypeName name="com.doctorapp.repo.DoctorRepositoryImpl"/>
    <fullyQualifiedTypeName name="com.doctorapp.service.IDoctorService"/>
    <fullyQualifiedTypeName name="com.doctorapp.service.DoctorServiceImpl"/>
    <fullyQualifiedTypeName name="com.doctorapp.exception.IdNotFoundException"/>
    <fullyQualifiedTypeName name="com.doctorapp.exception.DoctorNotFoundException"/>
    <fullyQualifiedTypeName name="java.sql.DriverManager"/>
    <fullyQualifiedTypeName name="java.sql.PreparedStatement"/>
    <fullyQualifiedTypeName name="com.doctorapp.util.DoctorDb"/>
    <fullyQualifiedTypeName name="com.doctorapp.util.Queries"/>
    <fullyQualifiedTypeName name="java.sql.Connection"/>
    <fullyQualifiedTypeName name="java.sql.ResultSet"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="com.doctorapp.model.Doctor"/>
    <fullyQualifiedTypeName name="javax.servlet.RequestDispatcher"/>
    <fullyQualifiedTypeName name="javax.swing.SwingContainer"/>
    <fullyQualifiedTypeName name="org.springframework.ui.ModelMap"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.ModelAndView"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Controller"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.ui.Model"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.doctorapp.service.IDoctorService"/>
    <fullyQualifiedTypeName name="org.doctorapp.exceptions.IdNotFoundException"/>
    <fullyQualifiedTypeName name="org.doctorapp.repository.IDoctorRepository"/>
    <fullyQualifiedTypeName name="org.doctorapp.service.DoctorServiceImpl"/>
    <fullyQualifiedTypeName name="org.doctorapp.exceptions.DoctorNotFoundException"/>
    <fullyQualifiedTypeName name="org.doctorapp.util.DoctorDb"/>
    <fullyQualifiedTypeName name="org.doctorapp.util.Queries"/>
    <fullyQualifiedTypeName name="org.doctorapp.model.Doctor"/>
</qualifiedTypeNameHistroy>
